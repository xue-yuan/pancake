{"version":3,"sources":["components/TodoList.jsx","storage/api.js","App.js","reportWebVitals.js","index.js"],"names":["TodoList","className","this","props","todo","done","onClick","toggleTodo","index","text","removeTodo","Component","storage","get","JSON","parse","localStorage","getItem","set","data","setItem","stringify","Todo","addTodo","React","useState","setTodo","onSubmit","e","preventDefault","type","value","onChange","target","autoFocus","App","todos","setTodos","newTodos","splice","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAsBeA,E,4JAnBb,WAAU,IAAD,OACP,OACE,sBAAKC,UAAW,qIAAuIC,KAAKC,MAAMC,KAAKC,KAAO,2BAA6B,0BAA3M,UACE,qBAAKJ,UAAU,mCAAmCK,QAAS,kBAAM,EAAKH,MAAMI,WAAW,EAAKJ,MAAMK,QAAlG,SACE,qBAAKP,UAAU,iBAAf,SACE,sBAAKA,UAAU,UAAf,UACE,sBAAMA,UAAU,qBAAhB,gBACA,sBAAMA,UAAU,UAAhB,SAA2BC,KAAKC,MAAMC,KAAKK,cAIjD,qBAAKR,UAAU,yIAAyIK,QAAS,kBAAM,EAAKH,MAAMO,WAAW,EAAKP,MAAMK,QAAxM,SACE,mBAAGP,UAAU,oCAAb,6B,GAbaU,aCQRC,EAVD,CACZC,IADY,WAGV,OADWC,KAAKC,MAAMC,aAAaC,QAAQ,cAAgB,IAG7DC,IALY,SAKRC,GACFH,aAAaI,QAAQ,WAAYN,KAAKO,UAAUF,MCDpD,SAASG,EAAT,GAA4B,IAAZC,EAAW,EAAXA,QAAW,EACDC,IAAMC,SAAS,IADd,mBAClBrB,EADkB,KACZsB,EADY,KAUzB,OACE,sBAAMzB,UAAU,GAAG0B,SARA,SAACC,GACpBA,EAAEC,iBACGzB,IACLmB,EAAQnB,GACRsB,EAAQ,MAIR,SACE,uBACEI,KAAK,OACL7B,UAAU,6IACV8B,MAAO3B,EACP4B,SAAU,SAACJ,GAAD,OAAOF,EAAQE,EAAEK,OAAOF,QAClCG,WAAS,MAoDFC,MA9Cf,WAAgB,IAAD,EACaX,IAAMC,SAASb,EAAQC,OADpC,mBACNuB,EADM,KACCC,EADD,KASP9B,EAAa,SAACC,GAClB,IAAM8B,EAAQ,YAAOF,GACrBE,EAAS9B,GAAOH,MAAQiC,EAAS9B,GAAOH,KACxCgC,EAASC,GACT1B,EAAQM,IAAIoB,IAGR5B,EAAa,SAACF,GAClB,IAAM8B,EAAQ,YAAOF,GACrBE,EAASC,OAAO/B,EAAO,GACvB6B,EAASC,GACT1B,EAAQM,IAAIoB,IAGd,OACE,qBAAKrC,UAAU,MAAf,SACE,sBAAKA,UAAU,0BAAf,UACE,sBAAKA,UAAU,cAAf,UACE,qBAAIA,UAAU,mCAAd,UAAiD,sBAAMA,UAAU,OAAhB,iBAAiC,sBAAMA,UAAU,yCAAhB,qBAClF,cAACqB,EAAD,CAAMC,QAzBE,SAACd,GACf,IAAM6B,EAAQ,sBAAOF,GAAP,CAAc,CAAE3B,OAAMJ,MAAM,KAC1CgC,EAASC,GACT1B,EAAQM,IAAIoB,SAwBR,qBAAKrC,UAAU,sEAAf,SACGmC,EAAMI,KAAI,SAACpC,EAAMI,GAAP,OACT,cAAC,EAAD,CAEEA,MAAOA,EACPJ,KAAMA,EACNG,WAAYA,EACZG,WAAYA,GAJPF,cCjDJiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.8467e612.chunk.js","sourcesContent":["import { Component } from \"react\";\n\nclass TodoList extends Component {\n  render() {\n    return (\n      <div className={\"my-2 shadow-md relative sm:rounded-3xl sm:m-5 transition duration-300 ease-in-out transform hover:-translate-y-1 hover:scale-110 \" + (this.props.todo.done ? \"bg-yellow-300 text-white\" : \"bg-white text-gray-600\")}>\n        <div className=\"py-5 text-left sm:px-10 sm:py-16\" onClick={() => this.props.toggleTodo(this.props.index)}>\n          <div className=\"disable-select\">\n            <div className=\"newline\">\n              <span className=\"text-3xl font-bold\"># </span>\n              <code className=\"text-xl\">{this.props.todo.text}</code>\n            </div>\n          </div>\n        </div>\n        <div className=\"absolute inset-x-0 bottom-0 opacity-0 hover:opacity-100 hover:bg-red-400 transition duration-300 transform sm:rounded-b-3xl text-white\" onClick={() => this.props.removeTodo(this.props.index)}>\n          <i className=\"material-icons text-lg text-white\">delete</i>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TodoList;\n","let storage = {\n  get() {\n    let data = JSON.parse(localStorage.getItem('todolist')) || [];\n    return data;\n  },\n  set(data) {\n    localStorage.setItem('todolist', JSON.stringify(data));\n  }\n}\n\nexport default storage;","import React from \"react\";\nimport \"./App.css\";\nimport TodoList from \"./components/TodoList\";\nimport storage from './storage/api';\n\nfunction Todo({ addTodo }) {\n  const [todo, setTodo] = React.useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!todo) return;\n    addTodo(todo);\n    setTodo(\"\");\n  };\n\n  return (\n    <form className=\"\" onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"form-input mx-auto text-2xl text-gray-700 mt-10 block max-w-2xl w-full border-0 border-b-2 border-gray-200 focus:ring-0 focus:border-black\"\n        value={todo}\n        onChange={(e) => setTodo(e.target.value)}\n        autoFocus\n      />\n    </form>\n  );\n}\n\nfunction App() {\n  const [todos, setTodos] = React.useState(storage.get());\n\n  const addTodo = (text) => {\n    const newTodos = [...todos, { text, done: false }];\n    setTodos(newTodos);\n    storage.set(newTodos);\n  };\n\n  const toggleTodo = (index) => {\n    const newTodos = [...todos];\n    newTodos[index].done = !newTodos[index].done;\n    setTodos(newTodos);\n    storage.set(newTodos);\n  };\n\n  const removeTodo = (index) => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n    storage.set(newTodos);\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"container mx-auto py-20\">\n        <div className=\"text-center\">\n          <h1 className=\"text-5xl font-bold text-gray-700\"><span className=\"pr-1\">Pan</span><span className=\"bg-gray-700 text-white rounded-md px-2\">cake</span></h1>\n          <Todo addTodo={addTodo} />\n        </div>\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 md:grid-cols-2 text-center sm:px-10\">\n          {todos.map((todo, index) => (\n            <TodoList\n              key={index}\n              index={index}\n              todo={todo}\n              toggleTodo={toggleTodo}\n              removeTodo={removeTodo}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}